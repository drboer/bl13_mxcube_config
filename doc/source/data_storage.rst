*********************
Data Storage Policies
*********************

These are the 3 tentative paths used to store all data generated by MXCuBE and EDNA applications:

    :PROCESS_DATA: /beamlines/bl13/projects/<cycle>/<proposal-name>/<session_date>/PROCESS_DATA
    :RAW_DATA: /beamlines/bl13/projects/<cycle>/<proposal-name>/<session_date>/RAW_DATA
    :ISPyB_DATA: /beamlines/ispyb/bl<beamlineN>/<proposal-name>/<session_date>/ 

    * All subfolders are created by MXCuBE during a `data collection` according to the defined rules in Session HwObj.
    * Users are free to define subfolders to acomodate the data from different data collections. This is then propagated to the folder structure as indicated in `General folder structure`_ section.
    * The ISPyB_DATA folder contains the data for ISPyB then, it is not required to be accessible by the users i.e the data contained here would be available though the ISPyB portal.

    
`PROCESS_DATA` folder contents
++++++++++++++++++++++++++++++

* From MXCuBE:

    Used to save the input scripts for each post-processing pipeline. A subfolder is created for each post-processing pipeline according to the following naming convention:

        * Post-processing template folder: <post_processing_name>_<prefix>_<runN>_<procN>

    :Saving policy: Long term backup (tape).

* From EDNA:

    The folder `PROCESS_DATA/RESULTS` contains the data generated by each EDNA plugin execution. A subfolder is created following tha same naming convention used for the input scripts folder.
    
    If this location is defined as the `working folder`, all files generated by the plugin execution will be stored in this location. On the contrary, if we select to use the cluster's `scratch` partition as a working folder, the launcher script will recover *ONLY* the files of interest from the scratch partition and will move them to this location.

    :Saving policy: Temporary (on disk).


`RAW_DATA` folder contents
++++++++++++++++++++++++++

* From MXCuBE:

    All generated data by the different experiments conducted by MXCuBE will be saved here.
        
        * Standard Data Collection.
        * Mesh Data Collection.
        * Helical Data Collection.
        * Energy scans.
        * XRF scans.

    Users are free to group the different images collected in subfolders (see `General folder structure`_ section) or left all images in the same folder (not recommended).
    
    * Image naming template: <prefix>_<runN>_XXXX.cbf
        
    :Saving policy: Long term backup (tape).


`ISPyB_DATA` folder contents
++++++++++++++++++++++++++++

* From MXCuBE:

    Used to save all sample snapshots and diffraction thumbnails. We do not need to nest the images into subfolders because we access them though the ISPyB portal.

    * Snapshot naming template: <prefix>_<runN>_<snapN>.snapshot.jpeg
    * Original thumbnail naming template: <prefix>_<runN>_XXXX.jpeg
    * Thumbnail naming template: <prefix>_<runN>_XXXX.thumb.jpeg

    :Saving policy: Available by ISPyB (on disk)

* From EDNA:

    EDNA will create folders for each processing pipeline defined according to the same naming convention used for the `PROCESS_DATA/RESULTS` folder. Each subfolder will contain selected files configuredfor each plugin and accessed by the ISPyB webservice.

    :Saving policy: Available by ISPyB (on disk)


EDNA processing pipelines (plugins)
===================================

EDPluginControlInterfaceToMXCuBE-v1_3
+++++++++++++++++++++++++++++++++++++

* The strategy plugin is launched by MXCuBE after a `characterization data collection`. The results generated are parsed by MXCuBE to automatically propose a diffraction plan.
* The XML input file must contain the `dataSet` tag indicatiing the images to be processed even a `dataCollectionId` xml tag exists in the file i.e. EDNA will not get the filenames from the ISPyB database and must be always explicitely included to the input xml file.
   
    :Input script template: `PROCESS_DATA`/characterization_ref-<prefix>_<runN>_<procN>/EDNAInput_<DataCollectionId>.xml 
    :ISPyB folder template: `ISPyB_DATA`/ref_<prefix>_<runN>_dnafiles

    **ISPyB folder contents:**

        * best.log
        * B.jpg (Wilson plot).
        * ref-<prefix>_<runN>_000{1-4}_pred.jpg (Depends on the number of requested snaphots)
        * index/ (The summarized characterization report in html is encapsulated into this folder)
    
    
EDPluginControlEDNAprocv-1_0
++++++++++++++++++++++++++++

* The EDNAproc plugin is launched by MXCuBE after a standard data collection.

    :Input script template: `PROCESS_DATA`/ednaPROC_<prefix>_<runN>_<procN>/EDNAInput_<DataCollectionId>.xml 
    :ISPyB folder template: `ISPyB_DATA`/<prefix>_<runN>/ednaPROC_<date_time>/

    **ISPyB folder contents:**

        * ep_<prefix>_<runN>_aimless_anom.log
        * ep_<prefix>_<runN>_aimless_noanom.log
        * ep_<prefix>_<runN>_anom_aimless.inp
        * ep_<prefix>_<runN>_anom_aimless.mtz
        * ep_<prefix>_<runN>_anom_aimless_unmerged.mtz.gz
        * ep_<prefix>_<runN>_anom_truncate.mtz
        * ep_<prefix>_<runN>_input_XDS.INP
        * ep_<prefix>_<runN>_INTEGRATE.LP
        * ep_<prefix>_<runN>_merged_anom_XSCALE.LP
        * ep_<prefix>_<runN>_merged_noanom_XSCALE.LP
        * ep_<prefix>_<runN>_noanom_aimless.inp
        * ep_<prefix>_<runN>_noanom_aimless.mtz
        * ep_<prefix>_<runN>_noanom_aimless_unmerged.mtz.gz
        * ep_<prefix>_<runN>_noanom_truncate.mtz
        * ep_<prefix>_<runN>_phenix_xtriage_noanom.log
        * ep_<prefix>_<runN>_successful_XDS.INP
        * ep_<prefix>_<runN>_truncate_anom.log
        * ep_<prefix>_<runN>_truncate_noanom.log
        * ep_<prefix>_<runN>_unmerged_anom_pointless_multirecord.mtz.gz
        * ep_<prefix>_<runN>_unmerged_anom_XSCALE.LP
        * ep_<prefix>_<runN>_unmerged_noanom_pointless_multirecord.mtz.gz
        * ep_<prefix>_<runN>_unmerged_noanom_XSCALE.LP


EDPluginControlAutoPROCv1_0
+++++++++++++++++++++++++++

* The autoPROC plugin is launched by MXCuBE after a standard data collection.

    :Input script template: `PROCESS_DATA`/autoPROC_<prefix>_<runN>_<procN>/EDNAInput_<DataCollectionId>.xml 
    :ISPyB folder template: `ISPyB_DATA`/<prefix>_<runN>/autoPROC_<date_time>/

    **ISPyB folder contents:**

        * ap_<prefix>_<runN>_anom_autoPROC.log
        * ap_<prefix>_<runN>_anom_report.pdf
        * ap_<prefix>_<runN>_anom_report_startaniso.pdf
        * ap_<prefix>_<runN>_anom_startaniso_alldata-unique.mtz
        * ap_<prefix>_<runN>_anom_summary_inlined.html
        * ap_<prefix>_<runN>_anom_truncate.mtz
        * ap_<prefix>_<runN>_anom_XDS_ASCII.HKL.gz
        * ap_<prefix>_<runN>_noanom_autoPROC.log
        * ap_<prefix>_<runN>_noanom_report.pdf
        * ap_<prefix>_<runN>_noanom_report_startaniso.pdf
        * ap_<prefix>_<runN>_noanom_startaniso_alldata-unique.mtz
        * ap_<prefix>_<runN>_noanom_summary_inlined.html
        * ap_<prefix>_<runN>_noanom_truncate.mtz
        * ap_<prefix>_<runN>_noanom_XDS_ASCII.HKL.gz

    
.. _folder_structure:

General folder structure
========================
::

    /beamlines/bl13/.../<proposal>/<session_date>
       | 
       ├── /PROCESS_DATA/{subfolder}
       |     |
       |     ├── /characterization_ref-<prefix>_<runN>_<procN>
       |     ├── /ednaproc_<prefix>_<runN>_<procN>
       |     ├── /autoproc_<prefix>_<runN>_<procN>
       |     ├── /...
       |     └── /RESULTS/{subfolder}
       |           |
       |           ├── /characterization_ref-<prefix>_<runN>_<procN>
       |           ├── /ednaproc_<prefix>_<runN>_<procN>
       |           ├── /autoproc_<prefix>_<runN>_<procN>
       |           └── /...
       |
       └── /RAW_DATA/{subfolder}
              |
              ├── /<prefix>_<runN>
              └── /...

::

    /data/ispyb/bl<beamlineN>/<proposal>/<session_date>/{subfolder}
       |
       ├── /<prefix>_<runN>
       |      |
       |      ├── /characterization_ref-<prefix>_<runN>_<procN>
       |      ├── /ednaproc_<prefix>_<runN>_<procN>
       |      ├── /autoproc_<prefix>_<runN>_<procN>
       |      └── /...
       |
       └── /...
